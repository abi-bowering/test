{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "ad608a4f-d313-4b6f-94e2-cdbf030af757",
   "metadata": {},
   "source": [
    "### Import Packages\n",
    "\n",
    "Here is where we import all the packages we need. Noteably, NumPy is a standard computing package, Pandas is for data manipulation, and Torch is the Python machine learning package."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 189,
   "id": "3d9f9b7b-c156-4c71-9f07-b4c6d4fb23ef",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "cpu\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import torch as torch\n",
    "import torch.nn as nn\n",
    "import os\n",
    "from math import *\n",
    "import copy\n",
    "from scipy.integrate import odeint\n",
    "from matplotlib.lines import Line2D\n",
    "from tabulate import tabulate\n",
    "import matplotlib.cm as cm\n",
    "import matplotlib\n",
    "import random\n",
    "from mpl_toolkits.mplot3d import Axes3D\n",
    "from math import *\n",
    "from mpl_toolkits import mplot3d\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.interpolate import UnivariateSpline\n",
    "from torch.utils.data import DataLoader, Dataset\n",
    "device = torch.device(\"cuda:0\") if torch.cuda.is_available() else torch.device(\"cpu\") \n",
    "#this line says that if we have a GPU, it will do the computations there.\n",
    "print(device)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e68cabdf-0b26-4d00-a7c1-a9418e562b74",
   "metadata": {},
   "source": [
    "### Formatting .csv data files"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "id": "9ef513b1-1c61-40c9-8046-4859830c8abf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   21.5799    21.54    21.44  21.5799.1    21.51    21.42  21.4799    21.34  \\\n",
      "0    21.51  21.3199  21.2399    21.3700  21.4699  21.3899  21.1800  21.2099   \n",
      "1    28.69  28.4799  28.4099    28.5699  28.6599  28.5599  28.3199  28.2900   \n",
      "2    21.11  20.9599  21.0400    21.0400  21.0799  20.9899  20.8700  20.8099   \n",
      "3    21.12  21.0300  21.1200    21.0599  21.1000  20.9500  20.9599  20.8700   \n",
      "4    21.17  21.1800  21.1900    21.1599  21.3400  21.1499  21.1200  20.9599   \n",
      "\n",
      "     21.43    21.35  ...  21.2299  21.2199    21.26    21.25  21.2099  \\\n",
      "0  21.2099  21.2900  ...  21.1399  21.1200  21.2099  21.1499  21.0900   \n",
      "1  28.3999  28.3500  ...  28.0799  28.2399  28.3999  28.2299  28.0900   \n",
      "2  20.9099  20.7600  ...  20.3799  20.7099  20.9400  20.7000  20.4899   \n",
      "3  20.9400  20.8299  ...  20.5000  20.7199  20.9899  20.7500  20.6399   \n",
      "4  20.9400  20.9400  ...  20.7500  20.7800  21.0799  20.8700  20.9400   \n",
      "\n",
      "   21.25.1     21.2  21.5499  21.42.1  21.35.1  \n",
      "0  21.1299  21.0900  21.3700  21.2800  21.1700  \n",
      "1  28.1700  28.2000  28.3799  28.3899  28.3600  \n",
      "2  20.6100  20.7099  20.6800  20.8299  21.0300  \n",
      "3  20.6900  20.7500  20.7900  20.8700  20.8299  \n",
      "4  20.8400  20.8199  21.0000  21.0000  20.9400  \n",
      "\n",
      "[5 rows x 24 columns]\n"
     ]
    }
   ],
   "source": [
    "#upload .csv file and skip 13 header rows\n",
    "DTS_calib = pd.read_csv('00 to 23 31Jan2020 copy.csv', skiprows=range(13)).head(100).iloc[:, 1:]\n",
    "\n",
    "#check to see the rows and columns have been skipped\n",
    "print(DTS_calib.head())\n",
    "\n",
    "#create new file which stores the updated version (without headers or depth)\n",
    "DTS_calib.to_csv('00 to 23 31Jan2020 no header top 100.csv', index=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "id": "1ca9498f-3ed4-42d5-b663-c8f86b8c0715",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 0.  1.  2.  3.  4.  5.  6.  7.  8.  9. 10. 11. 12. 13. 14. 15. 16. 17.\n",
      " 18. 19. 20. 21. 22. 23.]\n"
     ]
    }
   ],
   "source": [
    "#convert the DataFrame which we created using Pandas from .csv file into a NumPy array\n",
    "observed_temp = DTS_calib.to_numpy()\n",
    "\n",
    "#Define the dimensions of the array\n",
    "num_depths, num_hours = observed_temp.shape\n",
    "\n",
    "#define a time vector (to be used in later versions to compute splines, this is currently arbitrary)\n",
    "t = np.linspace(0, 23, num = 24)\n",
    "print(t)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f39466f8-22a1-435e-a0a9-1b62b31cda91",
   "metadata": {},
   "source": [
    "### Spline approximation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 233,
   "id": "f3f8803c-f891-464b-aa7f-0bb2b9bd37de",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "#initialize arrays to store the spline-smoothed data and derivatives\n",
    "smoothed_observed_temp = np.zeros(observed_temp.shape)\n",
    "spline_deriv=np.zeros(observed_temp.shape)\n",
    "\n",
    "# Loop through each row (depth) and fit a spline to smooth the temperature data\n",
    "for i in range(observed_temp.shape[0]):\n",
    "    #shape[0] accesses the first dimension of the array, ie, tells us how many rows\n",
    "        #the code knows to do rows (depths) because of the shape[0] command\n",
    "    # Fit a spline to the data for each row (depth)\n",
    "    spline = UnivariateSpline(t, observed_temp[i, :], s=0.08)\n",
    "\n",
    "    # Evaluate the spline at each hour to get the smoothed temperature data\n",
    "    smoothed_observed_temp[i, :] = spline(t)\n",
    "\n",
    "    # Calculate the spline derivative at each hour for the given row (depth)\n",
    "    spline_deriv[i, :] = spline.derivative()(t)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 253,
   "id": "de86e304-8a90-4ad6-a0d2-e82313a5b179",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/q3/37ybk4wx2qzc09d76v2wnxp80000gn/T/ipykernel_26904/4009046814.py:11: MatplotlibDeprecationWarning: The get_cmap function was deprecated in Matplotlib 3.7 and will be removed two minor releases later. Use ``matplotlib.colormaps[name]`` or ``matplotlib.colormaps.get_cmap(obj)`` instead.\n",
      "  cmap = cm.get_cmap(cmap_name)\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAccAAAHVCAYAAACE4jAiAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy88F64QAAAACXBIWXMAAA9hAAAPYQGoP6dpAACMt0lEQVR4nOzdeZwcdZ34/9enqvqc6blyzUyOSQIBEkAQERCUUy4BOdYFRAVEURbWXUQWReRSBMUVV0Xw2h/IVzkV8AARkPtcRJAjIQZykmRyzD19V9Xn98enuqe7ZyaZTmYyk/B+Ph6VOqf705XuetfnLKW11gghhBCiyBrvBAghhBATjQRHIYQQooIERyGEEKKCBEchhBCiggRHIYQQooIERyGEEKKCBEchhBCiggRHIYQQooIERyGEEKKCBEexWbfeeitKqeLkOA4tLS2cfvrpLFmyZFzTdvbZZ5elbbjp7LPPHtd0jqc1a9Zw1VVX8eqrr453UrZrt99+O//zP/8z5D6lFFddddU2TY8YW854J0BsP2655RZ22203MpkMzz77LN/+9rd5/PHHeeutt2hsbByXNF1++eWcd955xfW///3vXHDBBVx77bUcdthhxe1TpkwZj+RNCGvWrOHqq69m9uzZ7L333uOdnO3W7bffzhtvvMGFF144aN/zzz/PjBkztn2ixJiR4ChGbI899mDfffcF4NBDD8XzPK688kruv/9+PvvZz45LmnbaaSd22mmn4nomkwFg3rx5HHDAAeOSprGWTqeJRqMopcY1HZ7n4boukUhkXNMxmtLpNLFYrOq/21G/a+9lUqwqtlghUK5bt664LZPJ8JWvfIW9996b+vp6mpqa+NCHPsTvf//7sr/913/9V3bfffeybSeccAJKKe65557itr///e8opfjjH/+4VWl99NFHOeKII6irqyMej3PQQQfx17/+teyYq666CqUUr732Gv/6r/9aTP9FF12E67osXryYY445hkQiwezZs7n++uvL/v6JJ55AKcWvf/1rLrroIpqbm4nFYhxyyCG88sorg9L0t7/9jY9//OM0NTURjUZ5//vfz9133112TKFI++GHH+acc85hypQpxONxstksb7/9Np/97GeZN28e8Xic6dOnc8IJJ/D666+XpemDH/wgAJ/97GeLxcyFIsBDDz2UQw89dFDazj77bGbPnl1cX758OUoprr/+eq655hrmzJlDJBLh8ccfH/FnGU5nZyfnn38+06dPJxwOM3fuXC677DKy2WzxmPe///185CMfGfS3nucxffp0TjnllOK2XC7HNddcw2677UYkEmHKlCl89rOfZcOGDWV/O3v2bI4//njuvfde3v/+9xONRrn66quHTOOhhx7KAw88wIoVK8qK6wsqi1UL/2+PPfYY5557LpMmTaKuro4zzzyTZDJJe3s7p556Kg0NDbS0tHDxxReTz+fL3nOkn0OMDQmOYostW7YMgF122aW4LZvN0tnZycUXX8z999/PHXfcwYc//GFOOeUUbrvttuJxH/3oR1m4cCFr164FwHVdnnzySWKxGI888kjxuEcffRTHcYa8gI/Ur3/9a4466ijq6ur41a9+xd13301TUxNHH330oAAJcOqpp7LXXnvxu9/9jnPPPZcf/OAHfPnLX+akk07iuOOO47777uPwww/nq1/9Kvfee++gv//617/O0qVL+eUvf8kvf/lL1qxZw6GHHsrSpUuLxzz++OMcdNBBdHd389Of/pTf//737L333px22mnceuutg17znHPOIRQK8f/+3//jt7/9LaFQiDVr1jBp0iS+853v8NBDD/GTn/wEx3HYf//9Wbx4MQD77LMPt9xyCwDf+MY3eP7553n++ef5/Oc/v0Xn8kc/+hGPPfYY//3f/82f//xndtttt6o/S6lMJsNhhx3GbbfdxkUXXcQDDzzApz/9aa6//vqygPfZz36WZ555ZlAd98MPP8yaNWuKJRe+73PiiSfyne98hzPOOIMHHniA73znOzzyyCMceuihpNPpsr//+9//zn/913/xH//xHzz00EP8y7/8y5DpvOmmmzjooINobm4unsPnn39+s+fr85//PPX19dx555184xvf4Pbbb+fcc8/luOOOY6+99uK3v/0tZ511Ft///vf58Y9/XPy7aj+HGANaiM245ZZbNKBfeOEFnc/ndV9fn37ooYd0c3OzPvjgg3U+nx/2b13X1fl8Xn/uc5/T73//+4vb3377bQ3o2267TWut9TPPPKMBfckll+g5c+YUjzvyyCP1gQceOOK0Pv744xrQ99xzj9Za62QyqZuamvQJJ5xQdpzneXqvvfbS++23X3HblVdeqQH9/e9/v+zYvffeWwP63nvvLW7L5/N6ypQp+pRTThn03vvss4/2fb+4ffny5ToUCunPf/7zxW277babfv/73z/o3B1//PG6paVFe56ntR4492eeeeZmP7vrujqXy+l58+bpL3/5y8XtL730kgb0LbfcMuhvDjnkEH3IIYcM2n7WWWfptra24vqyZcs0oHfaaSedy+XKjh3pZxnKT3/6Uw3ou+++u2z7d7/7XQ3ohx9+WGut9caNG3U4HNZf//rXy4479dRT9bRp04rvfccdd2hA/+53vys7rnAObrrppuK2trY2bdu2Xrx48bDpK3XccceVnZNSgL7yyiuL64X/ty996Utlx5100kka0DfccEPZ9r333lvvs88+xfVqPocYG5JzFCN2wAEHEAqFSCQSHHPMMTQ2NvL73/8exymvur7nnns46KCDqK2txXEcQqEQ//u//8uiRYuKx+y0007Mnj2bRx99FIBHHnmEPffck09/+tMsW7aMd955h2w2yzPPPMNHP/rRLU7zc889R2dnJ2eddRau6xYn3/c55phjeOmll0gmk2V/c/zxx5etz58/H6UUxx57bHGb4zjsvPPOrFixYtB7nnHGGWVFbm1tbRx44IHFIsi3336bt956i0996lMAZen62Mc+xtq1a4s5v4KhcjSu63LttdeyYMECwuEwjuMQDodZsmRJ2bkeTR//+McJhULF9S35LKUee+wxampq+MQnPlG2vdC6uJCznzRpEieccAK/+tWv8H0fgK6uLn7/+99z5plnFr+Df/rTn2hoaOCEE04oS8vee+9Nc3MzTzzxRNn7vO997ysr+RhtQ32XAI477rhB20u/S9V+DjH6JDiKEbvtttt46aWXeOyxx/jiF7/IokWL+OQnP1l2zL333supp57K9OnT+fWvf83zzz/PSy+9xDnnnFNsLFNwxBFHFC9+jz76KEceeSR77rkn06ZN49FHH+XZZ58lnU5vVXAs1Id+4hOfIBQKlU3f/e530VrT2dlZ9jdNTU1l6+FwmHg8TjQaHbS98jMBNDc3D7mto6OjLE0XX3zxoDSdf/75AGzcuLHs71taWga95kUXXcTll1/OSSedxB//+EdefPFFXnrpJfbaa68xK3arTMeWfJZSHR0dNDc3D2pcNHXqVBzHKZ4zMEXLq1evLha733HHHWSz2bJuOuvWraO7u5twODwoPe3t7SM6r6NpqO/ScNtLv0vVfg4x+qS1qhix+fPnFxvhHHbYYXiexy9/+Ut++9vfFu/8f/3rXzNnzhzuuuuusgteaeOKgiOOOIL//d//5f/+7/948cUX+cY3vgHA4YcfziOPPMKKFSuora3dqpaAkydPBuDHP/7xsK8zbdq0LX79obS3tw+5bdKkSWVpuvTSS8vq1UrtuuuuZetDtUz99a9/zZlnnsm1115btn3jxo00NDSMKK3RaJSenp5B24e7+FamY0s+S6lJkybx4osvorUue+3169fjum7x9QGOPvpoWltbueWWWzj66KO55ZZb2H///VmwYEFZeiZNmsRDDz005PslEolNfp6JotrPIUafBEexxa6//np+97vfccUVV3DKKadgWRZKKcLhcNlFp729fVBrVTDBUSnF5ZdfjmVZHHzwwYBprPNf//VfrFixgoMPPrisGK9aBx10EA0NDSxcuJB///d/3+LXqcYdd9zBRRddVDwHK1as4LnnnuPMM88ETLCYN28e//jHPwYFtmoopQZ1o3jggQdYvXo1O++8c3Fb4ZihcpOzZ8/mnnvuIZvNFo/r6Ojgueeeo66ubrNp2NrPcsQRR3D33Xdz//33c/LJJxe3FxpvHXHEEcVttm3zmc98hv/5n//h6aef5m9/+xs/+9nPyl7v+OOP584778TzPPbff/+q07MpkUhkmzWEGcvPIUZGgqPYYo2NjVx66aVccskl3H777Xz6058uNo0///zz+cQnPsGqVav41re+RUtLy6CWhlOnTmWPPfbg4Ycf5rDDDiMejwMmOHZ2dtLZ2ckNN9ywVWmsra3lxz/+MWeddRadnZ184hOfYOrUqWzYsIF//OMfbNiwgZtvvnmr3qPS+vXrOfnkkzn33HPp6enhyiuvJBqNcumllxaP+dnPfsaxxx7L0Ucfzdlnn8306dPp7Oxk0aJF/P3vfy/rzjKc448/nltvvZXddtuN973vfbz88st873vfG9QZfaeddiIWi/Gb3/yG+fPnU1tbS2trK62trXzmM5/hZz/7GZ/+9Kc599xz6ejo4Prrrx9RYByNz3LmmWfyk5/8hLPOOovly5ez55578swzz3DttdfysY99bFCR+jnnnMN3v/tdzjjjDGKxGKeddlrZ/tNPP53f/OY3fOxjH+M///M/2W+//QiFQrz77rs8/vjjnHjiiWVBuBp77rkn9957LzfffDMf+MAHsCyrWJIy2sbyc4gRGu8WQWLiK7S8e+mllwbtS6fTetasWXrevHnadV2ttdbf+c539OzZs3UkEtHz58/Xv/jFL4otQSt9+ctf1oD+9re/XbZ93rx5GtCvvfZaVWmtbK1a8OSTT+rjjjtONzU16VAopKdPn66PO+64suMKadywYUPZ35511lm6pqZm0Hsdcsghevfddx/03v/v//0//R//8R96ypQpOhKJ6I985CP6b3/726C//8c//qFPPfVUPXXqVB0KhXRzc7M+/PDD9U9/+tPiMZs6911dXfpzn/ucnjp1qo7H4/rDH/6wfvrpp4dsgXrHHXfo3XbbTYdCoUEtK3/1q1/p+fPn62g0qhcsWKDvuuuuYVurfu973xuUjpF+luF0dHTo8847T7e0tGjHcXRbW5u+9NJLdSaTGfL4Aw88UAP6U5/61JD78/m8/u///m+911576Wg0qmtra/Vuu+2mv/jFL+olS5YUj2tra9PHHXfcZtNX0NnZqT/xiU/ohoYGrZQq+z5XntPh/t+q+Y6N9HOIsaG01nocYrIQO5wnnniCww47jHvuuWdQ60shxPZFWqsKIYQQFSQ4CiGEEBWkWFUIIYSoIDlHIYQQooIERyGEEKKCBEchhBCiwrgPAnDzzTdz8803s3z5cgB23313rrjiiuIgz1prrr76an7+85/T1dXF/vvvz09+8pNBzwLcFN/3WbNmDYlEYsIOFyWEEGLsaa3p6+ujtbUVy9pE/nA8O1lqrfUf/vAH/cADD+jFixfrxYsX669//es6FArpN954Q2ttOpQnEgn9u9/9Tr/++uv6tNNO0y0tLbq3t3fE77Fq1SoNyCSTTDLJJJMG9KpVqzYZNyZka9Wmpia+973vcc4559Da2sqFF17IV7/6VcAMYD1t2jS++93v8sUvfnFEr9fT00NDQwOrVq2qalgsIYQQO5be3l5mzpxJd3c39fX1wx437sWqpTzP45577iGZTPKhD32IZcuW0d7ezlFHHVU8JhKJcMghh/Dcc88NGxyz2WzZUyD6+voAqKurk+AohBBis1VsE6JBzuuvv05tbS2RSITzzjuP++67jwULFhQf/VP5SKFp06YN+Vigguuuu476+vriNHPmzDFNvxBCiB3LhAiOu+66K6+++iovvPAC//Zv/8ZZZ53FwoULi/srI7yuePZbpUsvvZSenp7itGrVqjFLuxBCiB3P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1D/84Q+3LNWYAc0BmpqaAFi2bBnt7e0cddRRxWMikQiHHHIIzz333JDB8brrruPqq6/e4jSI7ZtSyoyssq3eq5ADrZ88Kq9p1zVhzxmoMtC+h96w2gTKIGDqNUtNXXXnWug0PewVQYPMQndHZeFHYuhiLjleklsuWY/GgiK0sMkhp3rRqT5I9aFTfehUb3EZd4TjajphrOY2EwCb24rBUDVMkSLU9yBl26jpO2FN32m8kzJiVeccrc3cbSqlBg0rN1Jaa0488US6urp4+umnAXjuuec46KCDWL16Na2trcVjv/CFL7BixQr+8pe/DHodyTmK9wLd1zUQMFebue5eb4pAx5LtQDyBipvGXiqegHgCa1JLMTeomppNLlmICWbMco7+KD/brtS///u/89prr/HMM88M2ld5t1k6VFqlSCRCJLLt+sMIMR5UohF7132xd923bLv2fVMMm00N9KvNpk1/12ymuN2sB/NM2tSHxWqLQY94IiiCTZStE45K7k/s8KoOjmPlS1/6En/4wx946qmnmDFj4EGvzcEYeu3t7bS0DDT+WL9+PdOmTdvm6RRiolOWZRoVRWJj2YVciB3auDcJ0lrz7//+79x777089thjzJkzp2z/nDlzaG5u5pFHHiluy+VyPPnkkxx44IHbOrlCCCHeA6rOOVqWtdkilWrqHC+44AJuv/12fv/735NIJIrdROrr64nFYiiluPDCC7n22muZN28e8+bN49prryUej3PGGWdUm3whhBBis6oOjldcccWg4LhhwwYefvhhPM/jzDPPrOr1br75ZgAOPfTQsu233HILZ599NgCXXHIJ6XSa888/vzgIwMMPPzwh+jgKIYTY8WzR2KpDyeVyHH300Zx66qn827/922i85KgZ6xFyhBBCbB9GGg9Grc4xHA7zpS99iRtuuGG0XlIIIYQYF6PaICcWi7F27drNHyiEEEJMYKMWHDds2MD3vve9sgHDhRBCiO1R1Q1y5syZM6hBTjabZf369ViWxR/+8IdRS5wQQggxHqoOjocccsig4BiNRpk9ezannXYas2fPHq20CSGEEOOi6uB46623jkEyhBBCiImj6jrHc845h2XLlg25b8WKFZxzzjlbnSghhBBiPFUdHG+99VY2bNgw5L6NGzfyq1/9aqsTJYQQQoynUe3K0dnZKU/DEEIIsd0bUZ3jU089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\n",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure(figsize = (5,5))\n",
    "y_low = np.min(observed_temp)\n",
    "y_top = np.max(observed_temp)\n",
    "plt.title('Raw Temperature over time', fontsize = 12)\n",
    "plt.xlabel('Hour', fontsize = 12)\n",
    "plt.ylabel('Recorded Temperature', fontsize = 12)\n",
    "# plt.xlim(0, 2)\n",
    "\n",
    "# Define the colormap. RdYlBu goes from red to blue (0ft=red, 100ft=blue)\n",
    "cmap_name = 'RdYlBu'\n",
    "cmap = cm.get_cmap(cmap_name)\n",
    "#the error message is not a true error but a warning that the cmap command is soon to be outdated\n",
    "\n",
    "# Calculate the color index (value between 0 and 1) based on the index 'i'\n",
    "for i in range(len(observed_temp)):\n",
    "    color_index = i / len(observed_temp)  # Maps i to a value between 0 and 1\n",
    "\n",
    "    # Get the color from the colormap\n",
    "    color = cmap(color_index)\n",
    "\n",
    "    # Plot the data with the chosen color\n",
    "    plt.plot(t, observed_temp[i, :], color=color)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 254,
   "id": "8ec3a907-c2af-4b98-845e-8244ce641bcd",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/q3/37ybk4wx2qzc09d76v2wnxp80000gn/T/ipykernel_26904/3264495511.py:11: MatplotlibDeprecationWarning: The get_cmap function was deprecated in Matplotlib 3.7 and will be removed two minor releases later. Use ``matplotlib.colormaps[name]`` or ``matplotlib.colormaps.get_cmap(obj)`` instead.\n",
      "  cmap = cm.get_cmap(cmap_name)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure(figsize = (5,5))\n",
    "y_low = np.min(smoothed_observed_temp)\n",
    "y_top = np.max(smoothed_observed_temp)\n",
    "plt.title('Smoothed Temperature over time', fontsize = 12)\n",
    "plt.xlabel('Hour', fontsize = 12)\n",
    "plt.ylabel('Recorded Temperature', fontsize = 12)\n",
    "# plt.xlim(0, 2)\n",
    "\n",
    "# Define the colormap. RdYlBu goes from red to blue (0ft=red, 100ft=blue)\n",
    "cmap_name = 'RdYlBu'\n",
    "cmap = cm.get_cmap(cmap_name)\n",
    "#the error message is not a true error but a warning that the cmap command is soon to be outdated\n",
    "\n",
    "# Calculate the color index (value between 0 and 1) based on the index 'i'\n",
    "for i in range(len(observed_temp)):\n",
    "    color_index = i / len(observed_temp)  # Maps i to a value between 0 and 1\n",
    "\n",
    "    # Get the color from the colormap\n",
    "    color = cmap(color_index)\n",
    "\n",
    "    # Plot the data with the chosen color\n",
    "    plt.plot(t, smoothed_observed_temp[i, :], color=color)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 261,
   "id": "bd25179f-fbb8-4b45-a832-ec302330566c",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/q3/37ybk4wx2qzc09d76v2wnxp80000gn/T/ipykernel_26904/3344968705.py:11: MatplotlibDeprecationWarning: The get_cmap function was deprecated in Matplotlib 3.7 and will be removed two minor releases later. Use ``matplotlib.colormaps[name]`` or ``matplotlib.colormaps.get_cmap(obj)`` instead.\n",
      "  cmap = cm.get_cmap(cmap_name)\n"
     ]
    },
    {
     "data": {
      "image/png": "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OFBsed++fYW7u7vIy8sTQlQsWADEzp07i22vUaNGon///kX/njVrllCpVGL37t3F1vvtt98EIFasWHHF48vIyBAGg0HccccdxZZv27ZNAMWChYrsBxAeHh4iPT29xD4vf9B99NFHAhAnT54sWpaeni70er2YNGnSFctutVqF2WwWdevWFRMmTChavnv37hLnt9DlwYLFYhEBAQFi5MiRxdabPHmy0Ol0IjU1VQjhuGEA4v333y+2XlxcnHBychKTJ0++YjmFEKJXr17C09NTJCcnl7ne5cdnsVhE7969S3w+l5/DsWPHCq1WK44dO3bF7V1vsHApm80mLBaL+Pbbb4VarS72OQ8aNKjU9/70008CEL///nux5YWf19y5c4UQ/wRql36mQgjxww8/CKDcwULt2rXLDO6F+Occjxs3TrRs2bLYay4uLqXu67HHHhOurq7i3LlzxZa/9957Aih6kJSm8NjGjx9fbPnOnTsFIF5++eWiZYXXamEAUZbatWuL2rVri4KCgiuuU7i92bNnF1s+fvx4YTAYrnjjLeuzLu896oUXXhCKopQ4N/379y927eXl5Qlvb+8SD0qbzSaaN28u2rVrd+WTIIR46aWXSi3PE088IRRFKXaPCQsLE4MGDSpze4Wu91oovCabN28ubDZb0XoffPCBAMTQoUOLvf+5554TgMjKyipW3vI8XyrrPn2pwmtg+vTpwsfHp9i10rhx42LPiUIVDRYAsW7dumLrXs+z7XJV3gzh4+PDli1b2L17N2+//TbDhg0jKiqKKVOm0LRp0xI9ixs3bkzz5s2LLRs5ciTZ2dns27evwvsPDAykXbt2xZY1a9aMc+fOFf172bJlNGnShBYtWmC1Wov++vfvf9Xq5cjISIxGI/fff3+x5Z06dSIsLKzYsorup1evXnh5eV31GO+//370en2xTjI//fQTJpOJhx56qGiZ1Wpl5syZNGrUCJ1Oh0ajQafTcerUKY4fP37V/ZRGo9HwwAMPsHjx4qKqWJvNxnfffcewYcPw8fEpOnZFUXjggQeKHXtgYCDNmzcv8xzn5+ezadMmRowYcdV+KfPnz6dVq1YYDAY0Gg1arZZ169Zd9fhWrlxJz549adiwYcVOQAXs37+foUOH4uPjg1qtRqvVMmrUKGw2G1FRUVd9/7Jly/D09GTIkCHFzmGLFi0IDAwsOocbNmwAKHFNjhgxotTmwCsZOnQoWq22xPJff/2Vzp074+rqWnSOv/rqq3JfQ8uWLaNnz57UqFGj2HEMGDAAgE2bNl3xvYXHdnlGR7t27WjYsGG5q9ovFRUVxZkzZxg3bhwGg+Gq6w8dOrTYv5s1a4bRaCxW7V2Rz7o896hNmzbRpEkTGjVqVGy9++67r9i/t2/fTnp6OqNHjy52bu12O7fddhu7d+8us/p5/fr1NGrUqER5xowZgxCC9evXl3FmKq6i18LAgQOLNV8Xfl8HDRpUbL3C5bGxscWWl+f5Uln36fXr19OnTx88PDyKroHXX3+dtLS0Ek0klcHLy4tevXoVW3Y9z7bL/WvjLLRp04YXX3yRX3/9lfj4eCZMmEBMTEyJTo6BgYEl3lu4LC0trcL7LXxYXUqv11NQUFD076SkJA4dOoRWqy325+bmhhCizFSpwjKVVe5r3U95Mzu8vb0ZOnQo3377LTabDXC0d7Vr147GjRsXrTdx4kRee+01br/9dpYuXcrOnTvZvXs3zZs3L3Y+Kmrs2LEYjUZ+/vlnAFavXk1CQkKxQCUpKQkhBAEBASWOf8eOHWWe44yMDGw221U7Vs6ZM4cnnniC9u3b8/vvv7Njxw52797NbbfddtXjS0lJqdKOm7GxsXTt2pULFy7w4YcfFgXQn376KUC5zn9SUhKZmZnodLoS5zAxMbHoHF7pmtRoNKV+H66ktOtv8eLFjBgxguDgYL7//nsiIyPZvXt30TVQHklJSSxdurTEMRReq+X5vpVWtho1alzTPaKwv0d5P//Lz2Fhp8/Cz7Cin3V57lFpaWkEBASUWO/yZYX9a4YPH17i/L7zzjsIIUhPT7/isaWlpV3x3Ba+Xpkqei14e3sX+7dOpytz+eXXZHmeL5Vxn961axf9+vUD4IsvvmDbtm3s3r2bV155BSjf972iSivH9TzbLlfl2RCl0Wq1vPHGG/zvf/8r6rFcKDExscT6hcsqcqOrCF9fX5ycnFiwYMEVX7+SwjJdqdyX5tpXdD8VGc/goYce4tdff2XNmjWEhoaye/du5s2bV2yd77//nlGjRjFz5sxiy1NTU68rB73wl8jXX3/NY489xtdff02NGjWKvizgODZFUdiyZUupPerL6mXv7e2NWq0u1oGtNN9//z09evQocdw5OTlXPQY/P7+rbr/wV2dhh8pC5fnC/fnnn+Tl5bF48eJiNU6lpadeia+vLz4+PqxatarU193c3IDi12RwcHDR61artUI3+9Kuv++//56IiAgWLVpU7PXLz0lZfH19adasGW+99Vaprxc+mEpTeGwJCQklHu7x8fFlflevpLC26mqff3lVxmd9OR8fn6JA4FKX33cKj//jjz++YtZUaUHHpftJSEgosTw+Pr7Y9ivL9VwL16I8z5fKuE///PPPaLVali1bVqy2qiLpoxW935RWjut5tl2uyoOFhISEUiOewirLyy+Go0ePcvDgwWJVRT/++CNubm7FetZXpsGDBzNz5kx8fHyIiIio0Hs7dOiAwWDghx9+4K677ipavn37ds6dO1csWLie/VxNv379CA4O5uuvvyY0NBSDwVCiilJRlBIP5eXLl3PhwgXq1KlTtOzyX0rl8dBDD/HEE0+wdetWli5dysSJE1Gr1UWvDx48mLfffpsLFy4wYsSICh2bk5MT3bt359dff+Wtt9664gVe2vEdOnSIyMhIQkJCytzHgAED+O677zh58iT169cvdZ3Cz/LQoUPF1inMNilL4Rf50vIJIfjiiy9KrHv5r8pCgwcP5ueff8Zms9G+ffsr7quwp/kPP/xA69ati5b/8ssv5co2KIuiKOh0umI3psTExBLZEFD2caxYsYLatWuXq5ntUoXVrN9//31R1g7A7t27OX78eNEvt4qoV68etWvXZsGCBUycOPG600Mr8lmXV/fu3Xnvvfc4duxYsaaIwtq8Qp07d8bT05Njx47x1FNPVXg/vXv3ZtasWezbt6/Y/fbbb79FURR69ux5TeWvimvhWpTn+VIZ92lFUdBoNMXugQUFBXz33Xcl1r3Subme+02hynzmVHmw0L9/f2rWrMmQIUNo0KABdrudAwcO8P777+Pq6sqzzz5bbP0aNWowdOhQpk6dSlBQEN9//z1r1qzhnXfeqdSc0Us999xz/P7773Tr1o0JEybQrFkz7HY7sbGx/P3330yaNOmKN2cvLy+ef/553nzzTR5++GHuvvtu4uLimDp1aokqr+vZz9Wo1WpGjRrFnDlzcHd3584778TDw6PYOoMHD2bhwoU0aNCAZs2asXfvXt59990Sv9Bq166Nk5MTP/zwAw0bNsTV1ZUaNWqUGeXfd999TJw4kfvuuw+TyVSiTblz5848+uijPPTQQ+zZs4du3brh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2Wzu1uPfeuutXHbZZbz22mvU1tZiNBq7/W8RQpxcEiwIMUhMmTKlw9uGDRsGwCeffMI///lPnnrqKe677z4ALrnkEtLT07n++ut59dVXWbBgQbce/6KLLmLVqlXdulYIEV6yDCHEIPHqq6+ybdu2Nj/Tp08PnPP5558DtFpGALj22muJjIzks88+6/bj//CHP+z2tUKI8JKZBSEGiTFjxnD22We3OW6328nPzwegvLwcg8FAYmJiq3MURSElJYXy8vJuP/6QIUO6fa0QIrxkZkEIERAfH09TUxOlpaWtjquqSlFREQkJCYFjZrO53STFjgIKRVFCO1ghxEkjwYIQIuCiiy4CYPXq1a2Ov/3229TW1gZuB23Xw44dO1qd9/nnn1NTU9P7AxVCnFSyDCGECLjkkkuYNWsWv/rVr3A6nZxzzjmB3RBnnnkm2dnZgXOzs7NZtmwZDz30EDNmzGDXrl08//zz2O32MP4LhBC9QYIFIUSAoii8++67LF++nD//+c+sWLGChIQEsrOzeeKJJ1ptm7zvvvtwOp288sorPP3000yaNIm33nqLK6+8Moz/AiFEb1BUKaMmhBBCiE5IzoIQQgghOiXBghBCCCE6JcGCEEIIITolwYIQQgghOiXBghBCCCE6JcGCEEIIITolwYIQQgghOiXBghBCCCE6JcGCEEIIITolwYIQQgghOiXBghBCCCE69f8B77GZt4CnbLAAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure(figsize = (5,5))\n",
    "y_low = np.min(spline_deriv)\n",
    "y_top = np.max(spline_deriv)\n",
    "plt.title('Spline derivative calculated rate of change of temperature', fontsize = 12)\n",
    "plt.xlabel('Hour', fontsize = 12)\n",
    "plt.ylabel('Rate of Change of Temperature', fontsize = 12)\n",
    "# plt.xlim(0, 2)\n",
    "\n",
    "# Define the colormap. RdYlBu goes from red to blue (0ft=red, 100ft=blue)\n",
    "cmap_name = 'RdYlBu'\n",
    "cmap = cm.get_cmap(cmap_name)\n",
    "#the error message is not a true error but a warning that the cmap command is soon to be outdated\n",
    "\n",
    "# Calculate the color index (value between 0 and 1) based on the index 'i'\n",
    "for i in range(len(t)):\n",
    "    color_index = i / len(t)  # Maps i to a value between 0 and 1\n",
    "\n",
    "    # Get the color from the colormap\n",
    "    color = cmap(color_index)\n",
    "\n",
    "    # Plot the data with the chosen color\n",
    "    plt.plot(t, spline_deriv[i, :], color=color)\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f4c8d10c-9fbc-461c-985e-06ffec104329",
   "metadata": {},
   "source": [
    "### Difference quotients to get derivative approximation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 263,
   "id": "ca2a6948-9e7e-43d7-ba05-a3b9f6d2b493",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\n",
      "[[-0.27981015  0.05272412  0.12292976 ...  0.07957745  0.1018994\n",
      "  -0.1760312 ]\n",
      " [-0.31483118  0.08191411  0.15308918 ...  0.10629303  0.06108875\n",
      "  -0.04475161]\n",
      " [ 0.01107166 -0.01170817 -0.02708155 ...  0.11057456  0.13815104\n",
      "   0.13818584]\n",
      " ...\n",
      " [ 0.07013962  0.02320785  0.03510411 ...  0.00053649  0.01672686\n",
      "   0.03811482]\n",
      " [ 0.06260708  0.03455807  0.04193977 ... -0.0048157   0.00271191\n",
      "   0.01316791]\n",
      " [ 0.06027059  0.03243285  0.05230167 ...  0.00321359  0.01505309\n",
      "   0.03066906]]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/q3/37ybk4wx2qzc09d76v2wnxp80000gn/T/ipykernel_26904/2766453127.py:32: MatplotlibDeprecationWarning: The get_cmap function was deprecated in Matplotlib 3.7 and will be removed two minor releases later. Use ``matplotlib.colormaps[name]`` or ``matplotlib.colormaps.get_cmap(obj)`` instead.\n",
      "  cmap = cm.get_cmap(cmap_name)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#define the time step size (delta_t)\n",
    "delta_t=[]\n",
    "for i in range(len(t) -1):\n",
    "    diff = t[i+1] - t[i]\n",
    "    delta_t.append(diff)\n",
    "\n",
    "print(delta_t)\n",
    "\n",
    "#initialize array to store the difference quotients \n",
    "diff_quots=np.zeros((num_depths, num_hours-1))\n",
    "    \n",
    "#compute difference quotient for each row (because we want the difference quotient hour to hour)\n",
    "#using smothed_observed_data because the purpose of the spline approximation is to get better difference quotients\n",
    "for i in range(num_depths):\n",
    "    for j in range(num_hours - 1):\n",
    "        diff_quots[i,j] = (smoothed_observed_temp[i, j+1] - smoothed_observed_temp[i,j])/delta_t[j]\n",
    "        \n",
    "print(diff_quots)\n",
    "\n",
    "\n",
    "\n",
    "fig = plt.figure(figsize = (5,5))\n",
    "y_low = np.min(diff_quots)\n",
    "y_top = np.max(diff_quots)\n",
    "plt.title('Difference quotient calculated rate of change of temperature', fontsize = 12)\n",
    "plt.xlabel('Hour', fontsize = 12)\n",
    "plt.ylabel('Rate of Change of Temperature', fontsize = 12)\n",
    "# plt.xlim(0, 2)\n",
    "\n",
    "# Define the colormap. RdYlBu goes from red to blue (0ft=red, 100ft=blue)\n",
    "cmap_name = 'RdYlBu'\n",
    "cmap = cm.get_cmap(cmap_name)\n",
    "#the error message is not a true error but a warning that the cmap command is soon to be outdated\n",
    "\n",
    "\n",
    "# Calculate the color index (value between 0 and 1) based on the index 'i'\n",
    "for i in range(num_depths):\n",
    "    color_index = i / num_depths  # Maps i to a value between 0 and 1\n",
    "    \n",
    "    # Get the color from the colormap\n",
    "    color = cmap(color_index)\n",
    "\n",
    "    # Plot the data with the chosen color\n",
    "    plt.plot(t[:-1], diff_quots[i, :], color=color)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "032c839a-6297-4a26-a4bc-9a6665e01b14",
   "metadata": {},
   "source": [
    "### Setup the model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "id": "8ae0d4b1-48fc-4712-85fd-1ebc1260ff02",
   "metadata": {},
   "outputs": [],
   "source": [
    "from torch.autograd import Variable\n",
    "from torch.autograd import Function # import Function to create custom activations\n",
    "from torch.nn.parameter import Parameter # import Parameter to create custom activations with learnable parameters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 234,
   "id": "e59cbd04-e2cd-4514-a457-c6893b2a3dcf",
   "metadata": {},
   "outputs": [],
   "source": [
    "#this block is neural network specific things we want to load in order to build and train the model\n",
    "\n",
    "class LoadDataset(Dataset):\n",
    "    def __init__(self, inputs, targets):\n",
    "        self.x = inputs\n",
    "        self.y = targets\n",
    "\n",
    "    def __len__(self):\n",
    "        return len(self.x)\n",
    "\n",
    "    def __getitem__(self, idx):\n",
    "        inputs = self.x[idx, :]\n",
    "        targets = self.y[idx, :]\n",
    "\n",
    "        return inputs, targets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 266,
   "id": "c473de83-ac5b-4c1d-bd3c-ff2a60eab437",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Net(\n",
      "  (linear1): Linear(in_features=1, out_features=10, bias=True)\n",
      "  (linear2): Linear(in_features=10, out_features=20, bias=True)\n",
      "  (linear3): Linear(in_features=20, out_features=20, bias=True)\n",
      "  (linear4): Linear(in_features=20, out_features=20, bias=True)\n",
      "  (linear5): Linear(in_features=20, out_features=20, bias=True)\n",
      "  (linear6): Linear(in_features=20, out_features=20, bias=True)\n",
      "  (linear7): Linear(in_features=20, out_features=20, bias=True)\n",
      "  (linear8): Linear(in_features=20, out_features=1, bias=True)\n",
      "  (mylrelu): LeakyReLU(negative_slope=0.01)\n",
      ")\n"
     ]
    }
   ],
   "source": [
    "#here we define a few hyperparameters\n",
    "epochs = 5000\n",
    "batch_size = 100\n",
    "input_size = 1 #we give the net as input the temperature at a fixed time and depth\n",
    "hidden_size1 = 10\n",
    "hidden_size2 = 20\n",
    "output_size = 1 #the net outputs the T' for the given T. This gives one equation for all depths\n",
    "\n",
    "#to have one equation per depth, the network should have input 100\n",
    "# and output 100 where 100 = number of depths at a fixed time (this is for a later version)\n",
    "\n",
    "class Net(nn.Module) :\n",
    "\n",
    "    def __init__(self, input_size, hidden_size1, hidden_size2, output_size):\n",
    "        super(Net, self).__init__()\n",
    "        self.linear1 = torch.nn.Linear(input_size,   hidden_size1, bias=True)\n",
    "        self.linear2 = torch.nn.Linear(hidden_size1, hidden_size2, bias=True)\n",
    "        self.linear3 = torch.nn.Linear(hidden_size2, hidden_size2, bias=True)\n",
    "        self.linear4 = torch.nn.Linear(hidden_size2, hidden_size2, bias=True)\n",
    "        self.linear5 = torch.nn.Linear(hidden_size2, hidden_size2, bias=True)\n",
    "        self.linear6 = torch.nn.Linear(hidden_size2, hidden_size2, bias=True)\n",
    "        self.linear7 = torch.nn.Linear(hidden_size2, hidden_size2, bias=True)\n",
    "        self.linear8 = torch.nn.Linear(hidden_size2, output_size,  bias=True)\n",
    "\n",
    "        self.mylrelu = torch.nn.LeakyReLU()    #Two_corners_LReLU()\n",
    "        \n",
    "    def forward(self, x):\n",
    "        x = self.mylrelu(self.linear1(x))\n",
    "        x = self.mylrelu(self.linear2(x))\n",
    "        x = self.mylrelu(self.linear3(x))\n",
    "        x = self.mylrelu(self.linear4(x))\n",
    "        x = self.mylrelu(self.linear5(x))\n",
    "        x = self.mylrelu(self.linear6(x))\n",
    "        x = self.mylrelu(self.linear7(x))\n",
    "        x = self.linear8(x)\n",
    "        return x\n",
    "        \n",
    "#name our network net\n",
    "net = Net(input_size, hidden_size1, hidden_size2, output_size).to(device)\n",
    "print(net)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e7e73c31-f666-4aac-b2ef-af1c469602af",
   "metadata": {},
   "source": [
    "### Training the Network"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 265,
   "id": "06c1f4fb-0ffa-4824-824d-2bbfec12f917",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(100, 23)\n",
      "train data torch.Size([2300, 1])\n",
      "expected shape torch.Size([2300, 1])\n",
      "2300\n",
      "Train Loss =  0.11917246975328612\n",
      "Train Loss =  0.1110129265681557\n",
      "Train Loss =  0.10289920218612837\n",
      "Train Loss =  0.09487549474705821\n",
      "Train Loss =  0.08755683510199837\n",
      "Train Loss =  0.08078663342672845\n",
      "Train Loss =  0.07418821849252867\n",
      "Train Loss =  0.06854761764407158\n",
      "Train Loss =  0.06422765650179076\n",
      "Train Loss =  0.060875037604052086\n",
      "Train Loss =  0.05805660946213681\n",
      "Train Loss =  0.05579356217513914\n",
      "Train Loss =  0.05390085611978303\n",
      "Train Loss =  0.052268600415276444\n",
      "Train Loss =  0.05077856090729651\n",
      "Train Loss =  0.049583021632355194\n",
      "Train Loss =  0.048637445368196655\n",
      "Train Loss =  0.047872346623436264\n",
      "Train Loss =  0.04727336529480374\n",
      "Train Loss =  0.04685236635091512\n",
      "Train Loss =  0.046577175674231155\n",
      "Train Loss =  0.04634630481672028\n",
      "Train Loss =  0.04620382392212101\n",
      "Train Loss =  0.046126532732792526\n",
      "Train Loss =  0.046068715943914394\n",
      "Train Loss =  0.04603935433956592\n",
      "Train Loss =  0.04600637118615534\n",
      "Train Loss =  0.045981648094628166\n",
      "Train Loss =  0.0459616158724479\n",
      "Train Loss =  0.04594636554627315\n",
      "Train Loss =  0.045928753305064594\n",
      "Train Loss =  0.045910427022887314\n",
      "Train Loss =  0.0458959917254422\n",
      "Train Loss =  0.04588190117931884\n",
      "Train Loss =  0.04586498888776354\n",
      "Train Loss =  0.045851631899890694\n",
      "Train Loss =  0.045840575359761715\n",
      "Train Loss =  0.04581739506481782\n",
      "Train Loss =  0.045801943896905235\n",
      "Train Loss =  0.045794180067984955\n",
      "Train Loss =  0.04576887263228064\n",
      "Train Loss =  0.04575902114257864\n",
      "Train Loss =  0.04573766962098687\n",
      "Train Loss =  0.04571178656719301\n",
      "Train Loss =  0.045687779419772\n",
      "Train Loss =  0.045674619953269546\n",
      "Train Loss =  0.04564257954125819\n",
      "Train Loss =  0.045616393179997154\n",
      "Train Loss =  0.04558906825664251\n",
      "Train Loss =  0.0455621917448614\n",
      "Train Loss =  0.04552702492345934\n",
      "Train Loss =  0.04550064496857965\n",
      "Train Loss =  0.04546567141685797\n",
      "Train Loss =  0.04540161132488562\n",
      "Train Loss =  0.04532393740247125\n",
      "Train Loss =  0.04524167295059432\n",
      "Train Loss =  0.04512782257212245\n",
      "Train Loss =  0.04500829558009687\n",
      "Train Loss =  0.04489797250489178\n",
      "Train Loss =  0.044800527839233044\n",
      "Train Loss =  0.04469639115521441\n",
      "Train Loss =  0.044569963791772076\n",
      "Train Loss =  0.044452543410917984\n",
      "Train Loss =  0.044311846080033676\n",
      "Train Loss =  0.044160930844752685\n",
      "Train Loss =  0.0440167495575936\n",
      "Train Loss =  0.04384786319797453\n",
      "Train Loss =  0.04363100514139818\n",
      "Train Loss =  0.04342843373508557\n",
      "Train Loss =  0.043235561122065\n",
      "Train Loss =  0.043038356117904186\n",
      "Train Loss =  0.04283606082848881\n",
      "Train Loss =  0.04263786271052516\n",
      "Train Loss =  0.042424673275293215\n",
      "Train Loss =  0.04223737881883331\n",
      "Train Loss =  0.042057414134235485\n",
      "Train Loss =  0.041899489583042654\n",
      "Train Loss =  0.04171850803591635\n",
      "Train Loss =  0.04155287454309671\n",
      "Train Loss =  0.04139717160116719\n",
      "Train Loss =  0.04129868966486791\n",
      "Train Loss =  0.04117664146115598\n",
      "Train Loss =  0.041072652310780854\n",
      "Train Loss =  0.04092130145948866\n",
      "Train Loss =  0.04083016053166078\n",
      "Train Loss =  0.04073887399357298\n",
      "Train Loss =  0.04066389191733754\n",
      "Train Loss =  0.04060991772490999\n",
      "Train Loss =  0.04056631150129049\n",
      "Train Loss =  0.04048823573343132\n",
      "Train Loss =  0.040506769822019596\n",
      "Train Loss =  0.04045214497929682\n",
      "Train Loss =  0.04039937476425067\n",
      "Train Loss =  0.040377350645544735\n",
      "Train Loss =  0.04037275238205557\n",
      "Train Loss =  0.040363548242527504\n",
      "Train Loss =  0.04032260019575124\n",
      "Train Loss =  0.040295877028256655\n",
      "Train Loss =  0.04027460960914259\n",
      "Train Loss =  0.040284050304604614\n",
      "Train Loss =  0.040271900999157326\n",
      "Train Loss =  0.04024177587226681\n",
      "Train Loss =  0.04023938119897376\n",
      "Train Loss =  0.0402121267321965\n",
      "Train Loss =  0.0402289756330783\n",
      "Train Loss =  0.04019867975021834\n",
      "Train Loss =  0.04018919056524401\n",
      "Train Loss =  0.040185103132187025\n",
      "Train Loss =  0.04017388549349878\n",
      "Train Loss =  0.04017222462140996\n",
      "Train Loss =  0.04016009620998217\n",
      "Train Loss =  0.04015444769807484\n",
      "Train Loss =  0.04014408223978851\n",
      "Train Loss =  0.04015605678053006\n",
      "Train Loss =  0.040115225250306336\n",
      "Train Loss =  0.04013676230755189\n",
      "Train Loss =  0.04009804817969385\n",
      "Train Loss =  0.04013238918117207\n",
      "Train Loss =  0.040122028440237045\n",
      "Train Loss =  0.04011181110273237\n",
      "Train Loss =  0.04011965773837722\n",
      "Train Loss =  0.04010906370113725\n",
      "Train Loss =  0.040077490873796785\n",
      "Train Loss =  0.04008838335942963\n",
      "Train Loss =  0.04015938249295172\n",
      "Train Loss =  0.04008276914448842\n",
      "Train Loss =  0.040077282439755356\n",
      "Train Loss =  0.04005151541660661\n",
      "Train Loss =  0.04005900697539682\n",
      "Train Loss =  0.04007862828186025\n",
      "Train Loss =  0.04004675583185061\n",
      "Train Loss =  0.04007349179490753\n",
      "Train Loss =  0.04004158597925435\n",
      "Train Loss =  0.040040052495896816\n",
      "Train Loss =  0.040069847509426916\n",
      "Train Loss =  0.040051528576599514\n",
      "Train Loss =  0.040058323870534485\n",
      "Train Loss =  0.04003423774290992\n",
      "Train Loss =  0.040033127383693405\n",
      "Train Loss =  0.04002442470063334\n",
      "Train Loss =  0.04002437862041204\n",
      "Train Loss =  0.04003486417881821\n",
      "Train Loss =  0.04002983770940615\n",
      "Train Loss =  0.040014168571518814\n",
      "Train Loss =  0.04004914823757565\n",
      "Train Loss =  0.040006917212968285\n",
      "Train Loss =  0.04004534641685693\n",
      "Train Loss =  0.040007422637680305\n",
      "Train Loss =  0.040001007039909775\n",
      "Train Loss =  0.040008753578624\n",
      "Train Loss =  0.04000452375444381\n",
      "Train Loss =  0.040002433664124946\n",
      "Train Loss =  0.040016963875488094\n",
      "Train Loss =  0.04000585866363152\n",
      "Train Loss =  0.03999024210497737\n",
      "Train Loss =  0.03999761512260074\n",
      "Train Loss =  0.03999783722278864\n",
      "Train Loss =  0.03999244935972535\n",
      "Train Loss =  0.040043301799375076\n",
      "Train Loss =  0.03999521174346623\n",
      "Train Loss =  0.039976188670033996\n",
      "Train Loss =  0.0399841613581647\n",
      "Train Loss =  0.039977338812921356\n",
      "Train Loss =  0.03999303872494594\n",
      "Train Loss =  0.039998884798715946\n",
      "Train Loss =  0.0399817187420052\n",
      "Train Loss =  0.03998873803926551\n",
      "Train Loss =  0.03999743497242098\n",
      "Train Loss =  0.040005100364594356\n",
      "Train Loss =  0.039964482815855226\n",
      "Train Loss =  0.03996256629571966\n",
      "Train Loss =  0.03997178871751479\n",
      "Train Loss =  0.03999031363460033\n",
      "Train Loss =  0.03995756254247997\n",
      "Train Loss =  0.03999340615194777\n",
      "Train Loss =  0.03997989460501982\n",
      "Train Loss =  0.03998581935530123\n",
      "Train Loss =  0.03997069224715233\n",
      "Train Loss =  0.039957568859276565\n",
      "Train Loss =  0.03997968396414881\n",
      "Train Loss =  0.04001730202656725\n",
      "Train Loss =  0.039983966225839176\n",
      "Train Loss =  0.03996834126503571\n",
      "Train Loss =  0.03995536320397387\n",
      "Train Loss =  0.039952561056808285\n",
      "Train Loss =  0.03995848572610513\n",
      "Train Loss =  0.03995146436373825\n",
      "Train Loss =  0.03998217841043421\n",
      "Train Loss =  0.039970977474813874\n",
      "Train Loss =  0.0399522020926942\n",
      "Train Loss =  0.03998450635244017\n",
      "Train Loss =  0.0399998062816651\n",
      "Train Loss =  0.0399932878334885\n",
      "Train Loss =  0.039973714388906956\n",
      "Train Loss =  0.03994077601996453\n",
      "Train Loss =  0.03995785457284554\n",
      "Train Loss =  0.03993233159670363\n",
      "Train Loss =  0.03994799176554965\n",
      "Train Loss =  0.039926043124464544\n",
      "Train Loss =  0.03995807954798574\n",
      "Train Loss =  0.0400163294625995\n",
      "Train Loss =  0.039945925950356155\n",
      "Train Loss =  0.03993140655043333\n",
      "Train Loss =  0.039946937224949186\n",
      "Train Loss =  0.03991606268707825\n",
      "Train Loss =  0.0399380293674767\n",
      "Train Loss =  0.03993661410134772\n",
      "Train Loss =  0.03991692169043033\n",
      "Train Loss =  0.03991902243022038\n",
      "Train Loss =  0.03993673298669898\n",
      "Train Loss =  0.03990801812514015\n",
      "Train Loss =  0.03996550818176373\n",
      "Train Loss =  0.03997380610393441\n",
      "Train Loss =  0.039914609459431274\n",
      "Train Loss =  0.03992842759370156\n",
      "Train Loss =  0.039968723269260445\n",
      "Train Loss =  0.0400402062451062\n",
      "Train Loss =  0.03991388043631678\n",
      "Train Loss =  0.03993055264910926\n",
      "Train Loss =  0.039919182010318924\n",
      "Train Loss =  0.03991939985881681\n",
      "Train Loss =  0.0399118696703859\n",
      "Train Loss =  0.03993240832958533\n",
      "Train Loss =  0.03990838624051084\n",
      "Train Loss =  0.03994437258528626\n",
      "Train Loss =  0.039910679197181824\n",
      "Train Loss =  0.03991608169820646\n",
      "Train Loss =  0.03990607753234065\n",
      "Train Loss =  0.03989989711376636\n",
      "Train Loss =  0.039907469616635986\n",
      "Train Loss =  0.039946946922851646\n",
      "Train Loss =  0.03999958430295405\n",
      "Train Loss =  0.039920681196710335\n",
      "Train Loss =  0.03989990752028382\n",
      "Train Loss =  0.039930613711476326\n",
      "Train Loss =  0.03989128717828704\n",
      "Train Loss =  0.03989084688541682\n",
      "Train Loss =  0.039946179594034736\n",
      "Train Loss =  0.039898876829639725\n",
      "Train Loss =  0.03991345295925503\n",
      "Train Loss =  0.03991448790158914\n",
      "Train Loss =  0.03987842223242573\n",
      "Train Loss =  0.03989858670241159\n",
      "Train Loss =  0.03989954726041659\n",
      "Train Loss =  0.039918967644157616\n",
      "Train Loss =  0.03994126030770333\n",
      "Train Loss =  0.03994885977843533\n",
      "Train Loss =  0.03990526728170073\n",
      "Train Loss =  0.039881718365232584\n",
      "Train Loss =  0.03987795341274013\n",
      "Train Loss =  0.03987706549789594\n",
      "Train Loss =  0.039906209375223385\n",
      "Train Loss =  0.03991633015887245\n",
      "Train Loss =  0.039902695576133934\n",
      "Train Loss =  0.039900009277398174\n",
      "Train Loss =  0.0398832803754055\n",
      "Train Loss =  0.03987878475986097\n",
      "Train Loss =  0.03987451541520979\n",
      "Train Loss =  0.039921826844953975\n",
      "Train Loss =  0.03988732425900905\n",
      "Train Loss =  0.039879410001246826\n",
      "Train Loss =  0.0398916128779883\n",
      "Train Loss =  0.039870555472114814\n",
      "Train Loss =  0.03988484787228315\n",
      "Train Loss =  0.03987359585564421\n",
      "Train Loss =  0.03988269716501236\n",
      "Train Loss =  0.03989376289689023\n",
      "Train Loss =  0.03987475743760233\n",
      "Train Loss =  0.039885133504867554\n",
      "Train Loss =  0.039874605308084385\n",
      "Train Loss =  0.03986399270513136\n",
      "Train Loss =  0.03988801542183627\n",
      "Train Loss =  0.03987227688017099\n",
      "Train Loss =  0.03988942479633767\n",
      "Train Loss =  0.03989110393044741\n",
      "Train Loss =  0.03987397148233393\n",
      "Train Loss =  0.0398744879209477\n",
      "Train Loss =  0.039901549603952015\n",
      "Train Loss =  0.03988934211108996\n",
      "Train Loss =  0.03985862381270398\n",
      "Train Loss =  0.0398671121093566\n",
      "Train Loss =  0.0399125362948879\n",
      "Train Loss =  0.03985805570593347\n",
      "Train Loss =  0.03988478834862295\n",
      "Train Loss =  0.039851481418894684\n",
      "Train Loss =  0.0398631180110185\n",
      "Train Loss =  0.03991158715570751\n",
      "Train Loss =  0.03986551977046158\n",
      "Train Loss =  0.03985329927957576\n",
      "Train Loss =  0.03985801646890848\n",
      "Train Loss =  0.0398777745988058\n",
      "Train Loss =  0.039864306054685425\n",
      "Train Loss =  0.03985429482291574\n",
      "Train Loss =  0.03985409300936305\n",
      "Train Loss =  0.03986644534313161\n",
      "Train Loss =  0.03984763894392097\n",
      "Train Loss =  0.03984958508416363\n",
      "Train Loss =  0.03985869746817195\n",
      "Train Loss =  0.039853128483114036\n",
      "Train Loss =  0.03986638148679682\n",
      "Train Loss =  0.039882719597738724\n",
      "Train Loss =  0.03987628537351671\n",
      "Train Loss =  0.039895850679148796\n",
      "Train Loss =  0.039898595246283905\n",
      "Train Loss =  0.03988931732981101\n",
      "Train Loss =  0.039863452376068934\n",
      "Train Loss =  0.03988393315154573\n",
      "Train Loss =  0.03985487402457258\n",
      "Train Loss =  0.03984691425348106\n",
      "Train Loss =  0.03986196689631628\n",
      "Train Loss =  0.039862809338323445\n",
      "Train Loss =  0.03986089591584776\n",
      "Train Loss =  0.03985561406158883\n",
      "Train Loss =  0.03986463493303112\n",
      "Train Loss =  0.03985310791303282\n",
      "Train Loss =  0.03986921724255966\n",
      "Train Loss =  0.039840354543665184\n",
      "Train Loss =  0.0398529224988559\n",
      "Train Loss =  0.03984650264939536\n",
      "Train Loss =  0.03985048174534155\n",
      "Train Loss =  0.039908155515466046\n",
      "Train Loss =  0.03984971931609123\n",
      "Train Loss =  0.03986139656247004\n",
      "Train Loss =  0.03985190577805042\n",
      "Train Loss =  0.039861092708357006\n",
      "Train Loss =  0.03984836205516173\n",
      "Train Loss =  0.03986111927129652\n",
      "Train Loss =  0.03987382190382999\n",
      "Train Loss =  0.03984779362445292\n",
      "Train Loss =  0.03985789507303549\n",
      "Train Loss =  0.03984937598199948\n",
      "Train Loss =  0.039844416992981795\n",
      "Train Loss =  0.03985375651846761\n",
      "Train Loss =  0.03984896952043409\n",
      "Train Loss =  0.039850973402676376\n",
      "Train Loss =  0.03984622098505497\n",
      "Train Loss =  0.03983922197442988\n",
      "Train Loss =  0.039839705877491964\n",
      "Train Loss =  0.039842399404100746\n",
      "Train Loss =  0.0398374871229348\n",
      "Train Loss =  0.039835525676608086\n",
      "Train Loss =  0.039841640214233295\n",
      "Train Loss =  0.039852527010699974\n",
      "Train Loss =  0.03983371028595645\n",
      "Train Loss =  0.03984607743990162\n",
      "Train Loss =  0.039851566209741264\n",
      "Train Loss =  0.039877061610636505\n",
      "Train Loss =  0.03983291773044545\n",
      "Train Loss =  0.0398260365118799\n",
      "Train Loss =  0.039834499804546\n",
      "Train Loss =  0.03983084816971551\n",
      "Train Loss =  0.039829757833934346\n",
      "Train Loss =  0.03983374693147514\n",
      "Train Loss =  0.03986082011428864\n",
      "Train Loss =  0.03983569726266939\n",
      "Train Loss =  0.03983609860196062\n",
      "Train Loss =  0.03988630978552544\n",
      "Train Loss =  0.03981322882211079\n",
      "Train Loss =  0.0398823578801492\n",
      "Train Loss =  0.03984223976326377\n",
      "Train Loss =  0.03984666437558506\n",
      "Train Loss =  0.03984909723310367\n",
      "Train Loss =  0.03984444365715203\n",
      "Train Loss =  0.03988265578189622\n",
      "Train Loss =  0.03984420949026295\n",
      "Train Loss =  0.0398307208214765\n",
      "Train Loss =  0.03989658194958516\n",
      "Train Loss =  0.03988417272415498\n",
      "Train Loss =  0.03982547731341227\n",
      "Train Loss =  0.03988307028118035\n",
      "Train Loss =  0.03982007426574179\n",
      "Train Loss =  0.03984920708867519\n",
      "Train Loss =  0.03985540455450182\n",
      "Train Loss =  0.03983100600864576\n",
      "Train Loss =  0.03981739845450805\n",
      "Train Loss =  0.039831755075441753\n",
      "Train Loss =  0.03986197238302101\n",
      "Train Loss =  0.03986610326430072\n",
      "Train Loss =  0.03981393575668335\n",
      "Train Loss =  0.03982827520888785\n",
      "Train Loss =  0.039834744094506554\n",
      "Train Loss =  0.03985284503711307\n",
      "Train Loss =  0.039816213528747146\n",
      "Train Loss =  0.039882230531910194\n",
      "Train Loss =  0.039819729149989457\n",
      "Train Loss =  0.03983854251387327\n",
      "Train Loss =  0.039831822738051414\n",
      "Train Loss =  0.039853037415963154\n",
      "Train Loss =  0.03981775061591812\n",
      "Train Loss =  0.03981620210992253\n",
      "Train Loss =  0.039823288624377354\n",
      "Train Loss =  0.0398189509489938\n",
      "Train Loss =  0.039807818425090416\n",
      "Train Loss =  0.03982443516345128\n",
      "Train Loss =  0.03981160469677137\n",
      "Train Loss =  0.03982848050477712\n",
      "Train Loss =  0.03980820318279059\n",
      "Train Loss =  0.039823760096307684\n",
      "Train Loss =  0.039837952136345535\n",
      "Train Loss =  0.039844732326657875\n",
      "Train Loss =  0.03980944155836883\n",
      "Train Loss =  0.03980928205925485\n",
      "Train Loss =  0.0398418419872937\n",
      "Train Loss =  0.039816571278092655\n",
      "Train Loss =  0.03982291666223951\n",
      "Train Loss =  0.03983187064042558\n",
      "Train Loss =  0.039795855951050056\n",
      "Train Loss =  0.03981585025220462\n",
      "Train Loss =  0.03984503504698691\n",
      "Train Loss =  0.03989766918770645\n",
      "Train Loss =  0.0398481551800733\n",
      "Train Loss =  0.03982547383107569\n",
      "Train Loss =  0.039800929938159556\n",
      "Train Loss =  0.03990180077760116\n",
      "Train Loss =  0.03982756132988826\n",
      "Train Loss =  0.03982681434844499\n",
      "Train Loss =  0.03980004605229782\n",
      "Train Loss =  0.039792507239010025\n",
      "Train Loss =  0.039816551781057016\n",
      "Train Loss =  0.03981768677982947\n",
      "Train Loss =  0.03982116775992124\n",
      "Train Loss =  0.03980794816237429\n",
      "Train Loss =  0.0398055474354845\n",
      "Train Loss =  0.03981015649016784\n",
      "Train Loss =  0.03982150550607754\n",
      "Train Loss =  0.03981665027854235\n",
      "Train Loss =  0.03980854558555976\n",
      "Train Loss =  0.03982308523162552\n",
      "Train Loss =  0.03983347190786963\n",
      "Train Loss =  0.03983126487582922\n",
      "Train Loss =  0.039832988996868546\n",
      "Train Loss =  0.039786670215265905\n",
      "Train Loss =  0.03981460598499879\n",
      "Train Loss =  0.03983556321295707\n",
      "Train Loss =  0.03983857144561151\n",
      "Train Loss =  0.03981093361811793\n",
      "Train Loss =  0.03979833270220653\n",
      "Train Loss =  0.03979749313515166\n",
      "Train Loss =  0.039824553643879684\n",
      "Train Loss =  0.03979705002806757\n",
      "Train Loss =  0.03980028159592463\n",
      "Train Loss =  0.03980067842032598\n",
      "Train Loss =  0.03981871202426112\n",
      "Train Loss =  0.039792677792518036\n",
      "Train Loss =  0.039805467483466084\n",
      "Train Loss =  0.039806869994525027\n",
      "Train Loss =  0.03980963644774064\n",
      "Train Loss =  0.039845901095996734\n",
      "Train Loss =  0.03982395715201679\n",
      "Train Loss =  0.03982117869283842\n",
      "Train Loss =  0.03978980697043564\n",
      "Train Loss =  0.039791080351594996\n",
      "Train Loss =  0.03979346289744844\n",
      "Train Loss =  0.03983046770419763\n",
      "Train Loss =  0.03979618661105633\n",
      "Train Loss =  0.03979629344995255\n",
      "Train Loss =  0.03979328760634298\n",
      "Train Loss =  0.03992885800645403\n",
      "Train Loss =  0.03990270460591368\n",
      "Train Loss =  0.03984212421852609\n",
      "Train Loss =  0.03979912303064181\n",
      "Train Loss =  0.039799522244088024\n",
      "Train Loss =  0.039798580434011376\n",
      "Train Loss =  0.039818330829882106\n",
      "Train Loss =  0.03983173549742154\n",
      "Train Loss =  0.039795125875136124\n",
      "Train Loss =  0.03980500522353079\n",
      "Train Loss =  0.039844934059226\n",
      "Train Loss =  0.03981011474262113\n",
      "Train Loss =  0.03982829930179793\n",
      "Train Loss =  0.039854163627909577\n",
      "Train Loss =  0.03979463300303272\n",
      "Train Loss =  0.039821073250926056\n",
      "Train Loss =  0.03981750636644985\n",
      "Train Loss =  0.039803539321798344\n",
      "Train Loss =  0.03983710981581522\n",
      "Train Loss =  0.0397866114002207\n",
      "Train Loss =  0.03981051796480366\n",
      "Train Loss =  0.03986892294462608\n",
      "Train Loss =  0.03980213383455639\n",
      "Train Loss =  0.03977894046060417\n",
      "Train Loss =  0.03978593590790811\n",
      "Train Loss =  0.03979017885158891\n",
      "Train Loss =  0.039789339729949184\n",
      "Train Loss =  0.039793202775004116\n",
      "Train Loss =  0.0398250719451386\n",
      "Train Loss =  0.039779938109543014\n",
      "Train Loss =  0.03986775522808666\n",
      "Train Loss =  0.039793731320811356\n",
      "Train Loss =  0.03978187443040635\n",
      "Train Loss =  0.03978826591502065\n",
      "Train Loss =  0.03978921817210705\n",
      "Train Loss =  0.039779015513056\n",
      "Train Loss =  0.03979202720296124\n",
      "Train Loss =  0.03978181118145585\n",
      "Train Loss =  0.03978119175071302\n",
      "Train Loss =  0.03978372770159141\n",
      "Train Loss =  0.039784628371505634\n",
      "Train Loss =  0.03978259683303211\n",
      "Train Loss =  0.039770444369186524\n",
      "Train Loss =  0.03977563199789628\n",
      "Train Loss =  0.039791471243876476\n",
      "Train Loss =  0.039813748398876705\n",
      "Train Loss =  0.03979894458113805\n",
      "Train Loss =  0.03981380148426346\n",
      "Train Loss =  0.039811770350712795\n",
      "Train Loss =  0.039771931731830475\n",
      "Train Loss =  0.039778011405597564\n",
      "Train Loss =  0.039769835628407156\n",
      "Train Loss =  0.039872642829204386\n",
      "Train Loss =  0.039791106631088514\n",
      "Train Loss =  0.03978218954137486\n",
      "Train Loss =  0.03978936847947214\n",
      "Train Loss =  0.03977138945913833\n",
      "Train Loss =  0.03978472338665439\n",
      "Train Loss =  0.03977148323927237\n",
      "Train Loss =  0.03978752085696096\n",
      "Train Loss =  0.039791577293173126\n",
      "Train Loss =  0.03977331656800664\n",
      "Train Loss =  0.03977495990693569\n",
      "Train Loss =  0.03978163898801026\n",
      "Train Loss =  0.03978891152402629\n",
      "Train Loss =  0.03980958862635105\n",
      "Train Loss =  0.03979899345532707\n",
      "Train Loss =  0.03977317954211131\n",
      "Train Loss =  0.039818652966262205\n",
      "Train Loss =  0.039799059943660446\n",
      "Train Loss =  0.039978037628790604\n",
      "Train Loss =  0.03979091411051543\n",
      "Train Loss =  0.03979243498052592\n",
      "Train Loss =  0.039766116715643715\n",
      "Train Loss =  0.039817467574840004\n",
      "Train Loss =  0.039764249697327614\n",
      "Train Loss =  0.03978934693757607\n",
      "Train Loss =  0.0397826400787934\n",
      "Train Loss =  0.03977534960469474\n",
      "Train Loss =  0.03980020433664322\n",
      "Train Loss =  0.03984168155685715\n",
      "Train Loss =  0.03981068876126538\n",
      "Train Loss =  0.03981532346781181\n",
      "Train Loss =  0.039769914406149284\n",
      "Train Loss =  0.039775609362708485\n",
      "Train Loss =  0.039768429432550205\n",
      "Train Loss =  0.03978636148183242\n",
      "Train Loss =  0.03978557333998058\n",
      "Train Loss =  0.03978377507756586\n",
      "Train Loss =  0.03978339453106341\n",
      "Train Loss =  0.03976096293848494\n",
      "Train Loss =  0.03978192455985624\n",
      "Train Loss =  0.03978229119725849\n",
      "Train Loss =  0.03980109840631485\n",
      "Train Loss =  0.03977316565325727\n",
      "Train Loss =  0.03981102699332911\n",
      "Train Loss =  0.03978241866697436\n",
      "Train Loss =  0.039781414377300636\n",
      "Train Loss =  0.039764488682798714\n",
      "Train Loss =  0.039788359047278114\n",
      "Train Loss =  0.039750027753736664\n",
      "Train Loss =  0.039782860113874725\n",
      "Train Loss =  0.03977614090494488\n",
      "Train Loss =  0.0397694212101076\n",
      "Train Loss =  0.039768346139918205\n",
      "Train Loss =  0.03979875922769956\n",
      "Train Loss =  0.03977279689001\n",
      "Train Loss =  0.03979519766795894\n",
      "Train Loss =  0.03981434509320104\n",
      "Train Loss =  0.03977819264906904\n",
      "Train Loss =  0.03984398923247405\n",
      "Train Loss =  0.039844937946485436\n",
      "Train Loss =  0.039773852361933044\n"
     ]
    },
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[265], line 44\u001b[0m\n\u001b[1;32m     42\u001b[0m     optimizer\u001b[38;5;241m.\u001b[39mzero_grad()\n\u001b[1;32m     43\u001b[0m     lo\u001b[38;5;241m.\u001b[39mbackward()\n\u001b[0;32m---> 44\u001b[0m     \u001b[43moptimizer\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mstep\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     45\u001b[0m     batch_idx \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;241m1\u001b[39m    \n\u001b[1;32m     46\u001b[0m l2_loss_list\u001b[38;5;241m.\u001b[39mappend(train_loss\u001b[38;5;241m/\u001b[39mbatch_idx) \u001b[38;5;66;03m#append adds elements to the end of the list, one at a time\u001b[39;00m\n",
      "File \u001b[0;32m~/anaconda3/lib/python3.10/site-packages/torch/optim/optimizer.py:113\u001b[0m, in \u001b[0;36mOptimizer._hook_for_profile.<locals>.profile_hook_step.<locals>.wrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    111\u001b[0m profile_name \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mOptimizer.step#\u001b[39m\u001b[38;5;132;01m{}\u001b[39;00m\u001b[38;5;124m.step\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;241m.\u001b[39mformat(obj\u001b[38;5;241m.\u001b[39m\u001b[38;5;18m__class__\u001b[39m\u001b[38;5;241m.\u001b[39m\u001b[38;5;18m__name__\u001b[39m)\n\u001b[1;32m    112\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m torch\u001b[38;5;241m.\u001b[39mautograd\u001b[38;5;241m.\u001b[39mprofiler\u001b[38;5;241m.\u001b[39mrecord_function(profile_name):\n\u001b[0;32m--> 113\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m~/anaconda3/lib/python3.10/site-packages/torch/autograd/grad_mode.py:27\u001b[0m, in \u001b[0;36m_DecoratorContextManager.__call__.<locals>.decorate_context\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     24\u001b[0m \u001b[38;5;129m@functools\u001b[39m\u001b[38;5;241m.\u001b[39mwraps(func)\n\u001b[1;32m     25\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mdecorate_context\u001b[39m(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs):\n\u001b[1;32m     26\u001b[0m     \u001b[38;5;28;01mwith\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mclone():\n\u001b[0;32m---> 27\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m~/anaconda3/lib/python3.10/site-packages/torch/optim/adam.py:157\u001b[0m, in \u001b[0;36mAdam.step\u001b[0;34m(self, closure)\u001b[0m\n\u001b[1;32m    153\u001b[0m                 max_exp_avg_sqs\u001b[38;5;241m.\u001b[39mappend(state[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mmax_exp_avg_sq\u001b[39m\u001b[38;5;124m'\u001b[39m])\n\u001b[1;32m    155\u001b[0m             state_steps\u001b[38;5;241m.\u001b[39mappend(state[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mstep\u001b[39m\u001b[38;5;124m'\u001b[39m])\n\u001b[0;32m--> 157\u001b[0m     \u001b[43madam\u001b[49m\u001b[43m(\u001b[49m\u001b[43mparams_with_grad\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    158\u001b[0m \u001b[43m         \u001b[49m\u001b[43mgrads\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    159\u001b[0m \u001b[43m         \u001b[49m\u001b[43mexp_avgs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    160\u001b[0m \u001b[43m         \u001b[49m\u001b[43mexp_avg_sqs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    161\u001b[0m \u001b[43m         \u001b[49m\u001b[43mmax_exp_avg_sqs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    162\u001b[0m \u001b[43m         \u001b[49m\u001b[43mstate_steps\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    163\u001b[0m \u001b[43m         \u001b[49m\u001b[43mamsgrad\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mgroup\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mamsgrad\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    164\u001b[0m \u001b[43m         \u001b[49m\u001b[43mbeta1\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mbeta1\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    165\u001b[0m \u001b[43m         \u001b[49m\u001b[43mbeta2\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mbeta2\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    166\u001b[0m \u001b[43m         \u001b[49m\u001b[43mlr\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mgroup\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mlr\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    167\u001b[0m \u001b[43m         \u001b[49m\u001b[43mweight_decay\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mgroup\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mweight_decay\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    168\u001b[0m \u001b[43m         \u001b[49m\u001b[43meps\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mgroup\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43meps\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    169\u001b[0m \u001b[43m         \u001b[49m\u001b[43mmaximize\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mgroup\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mmaximize\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    170\u001b[0m \u001b[43m         \u001b[49m\u001b[43mforeach\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mgroup\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mforeach\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    171\u001b[0m \u001b[43m         \u001b[49m\u001b[43mcapturable\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mgroup\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mcapturable\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    173\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m loss\n",
      "File \u001b[0;32m~/anaconda3/lib/python3.10/site-packages/torch/optim/adam.py:213\u001b[0m, in \u001b[0;36madam\u001b[0;34m(params, grads, exp_avgs, exp_avg_sqs, max_exp_avg_sqs, state_steps, foreach, capturable, amsgrad, beta1, beta2, lr, weight_decay, eps, maximize)\u001b[0m\n\u001b[1;32m    210\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    211\u001b[0m     func \u001b[38;5;241m=\u001b[39m _single_tensor_adam\n\u001b[0;32m--> 213\u001b[0m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mparams\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    214\u001b[0m \u001b[43m     \u001b[49m\u001b[43mgrads\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    215\u001b[0m \u001b[43m     \u001b[49m\u001b[43mexp_avgs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    216\u001b[0m \u001b[43m     \u001b[49m\u001b[43mexp_avg_sqs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    217\u001b[0m \u001b[43m     \u001b[49m\u001b[43mmax_exp_avg_sqs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    218\u001b[0m \u001b[43m     \u001b[49m\u001b[43mstate_steps\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    219\u001b[0m \u001b[43m     \u001b[49m\u001b[43mamsgrad\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mamsgrad\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    220\u001b[0m \u001b[43m     \u001b[49m\u001b[43mbeta1\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mbeta1\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    221\u001b[0m \u001b[43m     \u001b[49m\u001b[43mbeta2\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mbeta2\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    222\u001b[0m \u001b[43m     \u001b[49m\u001b[43mlr\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlr\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    223\u001b[0m \u001b[43m     \u001b[49m\u001b[43mweight_decay\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mweight_decay\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    224\u001b[0m \u001b[43m     \u001b[49m\u001b[43meps\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43meps\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    225\u001b[0m \u001b[43m     \u001b[49m\u001b[43mmaximize\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mmaximize\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    226\u001b[0m \u001b[43m     \u001b[49m\u001b[43mcapturable\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcapturable\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m~/anaconda3/lib/python3.10/site-packages/torch/optim/adam.py:258\u001b[0m, in \u001b[0;36m_single_tensor_adam\u001b[0;34m(params, grads, exp_avgs, exp_avg_sqs, max_exp_avg_sqs, state_steps, amsgrad, beta1, beta2, lr, weight_decay, eps, maximize, capturable)\u001b[0m\n\u001b[1;32m    255\u001b[0m \u001b[38;5;66;03m# update step\u001b[39;00m\n\u001b[1;32m    256\u001b[0m step_t \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;241m1\u001b[39m\n\u001b[0;32m--> 258\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m weight_decay \u001b[38;5;241m!=\u001b[39m \u001b[38;5;241m0\u001b[39m:\n\u001b[1;32m    259\u001b[0m     grad \u001b[38;5;241m=\u001b[39m grad\u001b[38;5;241m.\u001b[39madd(param, alpha\u001b[38;5;241m=\u001b[39mweight_decay)\n\u001b[1;32m    261\u001b[0m \u001b[38;5;66;03m# Decay the first and second moment running average coefficient\u001b[39;00m\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "#define our inputs and targets for the training data\n",
    "observed_temp_short = observed_temp[:,1:]\n",
    "print(observed_temp_short.shape)\n",
    "train_data = torch.from_numpy(observed_temp_short.reshape(-1,1))\n",
    "print('train data',train_data.shape)\n",
    "train_expected = torch.from_numpy(diff_quots.reshape(-1,1))\n",
    "print('expected shape', train_expected.shape)\n",
    "\n",
    "#define dataset to use when training\n",
    "dataset = LoadDataset(train_data, train_expected)\n",
    "print(len(dataset))\n",
    "\n",
    "# This loads data in batches which you can now change to be more than 1 without errors\n",
    "dataloader = DataLoader(dataset, batch_size=batch_size, shuffle=True)\n",
    "# print(len(dataloader))\n",
    "#we use Adam as the optimizer, an automatic stochastic gradient descent algorithm\n",
    "#we can tune the hyperparameters if desired\n",
    "optimizer = torch.optim.Adam(net.parameters(), lr=1e-04, betas=(0.9, 0.999), eps=1e-08, weight_decay=0, amsgrad=False)\n",
    "\n",
    "#define the loss function, in our case, mean squared error\n",
    "loss = torch.nn.MSELoss()\n",
    "\n",
    "#initialize an empty list of losses, loss starts at 0.\n",
    "\n",
    "l2_loss_list = []\n",
    "net.train()\n",
    "for epoch in range(epochs): \n",
    "    # if epoch % 10 == 0:\n",
    "    #     for param_group in optimizer.param_groups:\n",
    "    #         param_group['lr'] /= 2.\n",
    "\n",
    "    train_loss = 0\n",
    "    batch_idx = 0\n",
    "    for input_data, target_data in dataloader:\n",
    "        # print('input shape',input_data.shape)\n",
    "        input_data = input_data.to(device).float() #or use batch size instead of -1 but add , drop_last=True in DataLoader\n",
    "        preds = net(input_data)\n",
    "        # print(input_data.shape)\n",
    "        target_data = target_data.to(device).float()\n",
    "        lo = loss(preds, target_data)\n",
    "        train_loss += lo.detach().numpy()        \n",
    "        optimizer.zero_grad()\n",
    "        lo.backward()\n",
    "        optimizer.step()\n",
    "        batch_idx += 1    \n",
    "    l2_loss_list.append(train_loss/batch_idx) #append adds elements to the end of the list, one at a time\n",
    "    if epoch%1 ==0:\n",
    "        print('Train Loss = ', l2_loss_list[-1])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fc967fa2-dc90-4e77-8b3e-b4d5237e0335",
   "metadata": {},
   "source": [
    "### Visualizing output\n",
    "\n",
    "Differential equation reconstruction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 268,
   "id": "56aac649-a5c1-4a3b-bb57-be3a6e338e25",
   "metadata": {},
   "outputs": [],
   "source": [
    "def f_net(y,t):\n",
    "\n",
    "    net_input =  y\n",
    "    derivs = net((observed_temp).float()).detach().cpu().numpy()\n",
    "    return derivs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 281,
   "id": "8fd7e5ad-d58e-4a28-94c0-da143c3f99b0",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "'numpy.ndarray' object is not callable",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[285], line 9\u001b[0m\n\u001b[1;32m      6\u001b[0m time_steps_sol \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mlen\u001b[39m(t) \u001b[38;5;66;03m#stores the number of time steps in the solution\u001b[39;00m\n\u001b[1;32m      8\u001b[0m \u001b[38;5;66;03m#initialize 3D array of zeroes to store the true solutions to the ODE system for different initial conditions and time steps\u001b[39;00m\n\u001b[0;32m----> 9\u001b[0m true_solut \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39mzeros[\u001b[43mobserved_temp\u001b[49m\u001b[43m(\u001b[49m\u001b[43mn_initial_cond\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtime_steps_sol\u001b[49m\u001b[43m)\u001b[49m]\n\u001b[1;32m     11\u001b[0m \u001b[38;5;66;03m#initialize 3D array of zeroes to store the network solutions to the ODE system for different initial conditions and time steps\u001b[39;00m\n\u001b[1;32m     12\u001b[0m net_solut \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39mzeros([n_initial_cond,time_steps_sol])\n",
      "\u001b[0;31mTypeError\u001b[0m: 'numpy.ndarray' object is not callable"
     ]
    }
   ],
   "source": [
    "# Initial values, each column is a vector x0 of initial conditions\n",
    "components = 1 #means each observation (vector) has one component, ie only one variable is being modelled (temperature)\n",
    "n_initial_cond = 100 #100 initial conditions for each component - 100 depths\n",
    "in_cond = observed_temp[n_initial_cond-1,0]\n",
    "#compute solution\n",
    "time_steps_sol = len(t) #stores the number of time steps in the solution\n",
    "\n",
    "#initialize 3D array of zeroes to store the true solutions to the ODE system for different initial conditions and time steps\n",
    "true_solut = np.zeros(observed_temp[n_initial_cond, time_steps_sol])\n",
    "\n",
    "#initialize 3D array of zeroes to store the network solutions to the ODE system for different initial conditions and time steps\n",
    "net_solut = np.zeros([n_initial_cond,time_steps_sol])\n",
    "\n",
    "\n",
    "#loop set up to iterate i from 0 to (n_initial_cond-1). \n",
    "#This means that the loop will run 100 times in this case since n_initial_cond is 100.\n",
    "print(t)\n",
    "for i in range(n_initial_cond): #number of inputs\n",
    "    # Bundle initial conditions for ODE solver\n",
    "    y0 = in_cond[i]\n",
    "    # Call the ODE solver\n",
    "    psoln = np.transpose(odeint(f_net,y0, t))\n",
    "    net_solut[i,:] = psoln\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b5c87e79-2bc9-47bb-af29-b262b3493280",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
